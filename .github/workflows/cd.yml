name: CD - Entrega Contínua

on:
  push:
    branches: [main]
    tags:
      - 'v*'

jobs:
  deploy-dev:
    name: Deploy para desenvolvimento
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment:
      name: development
      url: https://dev.exemplo.com

    steps:
      - uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'

      - name: Instalar dependências
        run: npm ci

      - name: Build
        run: npm run build
        env:
          REACT_APP_API_URL: ${{ secrets.DEV_API_URL }}

      - name: Deploy para ambiente dev
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_DEV }}'
          projectId: seu-projeto-dev
          channelId: live

  deploy-prod:
    name: Deploy para produção
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://exemplo.com

    steps:
      - uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'

      - name: Instalar dependências
        run: npm ci

      - name: Build de produção
        run: npm run build
        env:
          REACT_APP_API_URL: ${{ secrets.PROD_API_URL }}

      - name: Deploy para produção
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_PROD }}'
          projectId: seu-projeto-prod
          channelId: live
